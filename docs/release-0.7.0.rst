########################################
OpenREM Release Notes version 0.7.0 beta
########################################

.. Warning::

    This is a beta version for developer testing. It is not suitable for general use, and the instructions below are
    likely to be incorrect.

****************
Headline changes
****************

* System

    * Django upgraded to version 1.8
    * Median function added to the database if using PostgreSQL
    * New user-defined display name for each unique system so that rooms with the same DICOM station name are displayed separately
    * Patient name and ID can optionally be stored in system, available for searching and export, but not displayed
    * Patient name, ID and accession number can be stored as a one-way hash, and remain searchable
    * Permission system has become more granular
    * System can now accept non-ASCII characters in protocol names etc
    * Menus have been tidied up

* Charts

    * Bar chart data points sorted by frequency, value or name in ascending or descending order
    * New chart of DLP per requested procedure type and requested procedure frequency
    * Chart data returned using AJAX to make pages more responsive
    * Chart plotting options available via Config menu

* DICOM Networking

    * Configuring and running DICOM Store SCP is now managed in the web interface
    * Query retrieve function is now built in to query PACS systems or modalities via the Import menu

* Exports

    * Patient sex is included in all exports
    * Filters generated by navigating through charts can now be used to filter export data

****************************
Upgrading from version 0.6.0
****************************

* Back up your database

    * For PostgreSQL you can refer to :doc:`backupRestorePostgreSQL`
    * For a non-production SQLite3 database, simply make a copy of the database file

* The 0.7.0 upgrade must be made from a 0.6.0 (or later) database, and a schema migration is required:

    Delete all numbered migration files in openrem's ``migrations`` folder.

.. sourcecode:: bash

    pip install openrem==0.7.0b6

In a shell/command window, move into the openrem folder:

* Ubuntu linux: ``/usr/local/lib/python2.7/dist-packages/openrem/``
* Other linux: ``/usr/lib/python2.7/site-packages/openrem/``
* Linux virtualenv: ``lib/python2.7/site-packages/openrem/``
* Windows: ``C:\Python27\Lib\site-packages\openrem\``
* Windows virtualenv: ``Lib\site-packages\openrem``

.. sourcecode:: bash

    python manage.py migrate --fake-initial
    python manage.py makemigrations remapp
    python manage.py migrate remapp --fake

* Now rename the file::

    0002_upgraded_openrem_add_median_function_and_populate_display_name_table.py.inactive

  to::

    0002_upgraded_openrem_add_median_function_and_populate_display_name_table.py

  and then run::

    # Windows:
    python C:\Python27\Lib\site-packages\openrem\manage.py makemigrations remapp
    python C:\Python27\Lib\site-packages\openrem\manage.py migrate remapp


******************************
Upgrading from version 0.7.0b5
******************************

* Back up your database

    * For PostgreSQL you can refer to :doc:`backupRestorePostgreSQL`
    * For a non-production SQLite3 database, simply make a copy of the database file

* Upgrade OpenREM

.. sourcecode:: bash

    pip install openrem==0.7.0b6

* Migrate the database

In a shell/command window, move into the openrem folder:

* Ubuntu linux: ``/usr/local/lib/python2.7/dist-packages/openrem/``
* Other linux: ``/usr/lib/python2.7/site-packages/openrem/``
* Linux virtualenv: ``lib/python2.7/site-packages/openrem/``
* Windows: ``C:\Python27\Lib\site-packages\openrem\``
* Windows virtualenv: ``Lib\site-packages\openrem``

Migrate:

.. sourcecode:: bash

    python manage.py makemigrations remapp
    python manage.py migrate

Restart the web server
======================

If you are using the built-in test web server (`not for production use`)::

    python manage.py runserver x.x.x.x:8000 --insecure

Otherwise restart using the command for your web server

Restart the Celery task queue
=============================

For testing, in a new shell:

Linux::

    # Linux: Debian/Ubuntu and derivatives
    cd /usr/local/lib/python2.7/dist-packages/openrem/
    # Linux: other distros. In a virtualenv replace all up to lib/ as appropriate
    cd /usr/local/lib/python2.7/site-packages/openrem/

    celery multi start stores default -A openremproject -c:stores 2 -c 3 \
    -Q:stores stores -Q default \
    --pidfile=/path/to/media/celery/%N.pid --logfile=/path/to/media/celery/%N.log

If you intend to use OpenREM to provide a DICOM Store SCP (ie you can DICOM send things to OpenREM without using
any other program, such as Conquest), then we need a Celery Queue just for the store. The node (and queue) created for
this is called ``stores`` and it needs to have a concurrency equal or greater than the number of store SCPs. This would
normally be just one. So set ``-c:stores 1`` or ``-c:stores 2`` etc as you see fit. The ``-c 3`` specifies how many
workers should be available for all the other jobs - exports; and imports when using the OpenREM Store SCP.

You must also specify the location for the pid file and for the log file. You might put these in the media folder, or
the logs might go in ``/var/log/``.

The ``\`` is added in to allow the single command to go over several lines.

Windows::

    cd C:\Python27\Lib\site-packages\openrem\
    celery multi start stores default -A openremproject -c:stores 2 -c 3 ^
    -Q:stores stores -Q default ^
    --pidfile=\path\to\media\celery\%N.pid --logfile=\path\to\media\celery\%N.log

This is the same as for Linux, but this time the line continuation character is ``^``.

For production use, see http://celery.readthedocs.org/en/latest/tutorials/daemonizing.html

To stop the celery queues::

    celery multi stop stores default --pidfile=/path/to/media/celery/%N.pid

Check the new settings
======================

* Go to ``Config -> Manage users`` and make sure the users have the right settings
* Return to the OpenREM interface (click on ``view site`` at the top right)
* Go to ``Config -> DICOM object delete settings`` and configure appropriately
* Go to ``Config -> Patient ID settings`` and configure appropriately
* Go to ``Config -> View and edit display names`` and review. If you have upgraded from ``0.7.0b5``, edit each one in
  turn and save it.