# This file contains configuration information for the DICOM server
# Do not edit unless you know what you are doing

[sscscp]
MicroPACS                = sscscp

# Network configuration: server name and TCP/IP port#
MyACRNema                = OPENREM
TCPPort                  = 5678

# Host, database, username and password for database
SQLHost                  = localhost
# SQLServer                = E:\conquest\dbase\conquest.db3
# The SQLServer is blank below to prevent the incoming objects from
# being added to the Conquest database.
SQLServer                = 
Username                 = 
Password                 = 
SqLite                   = 1
DoubleBackSlashToDB      = 0
UseEscapeStringConstants = 0

# Configure server
ImportExportDragAndDrop  = 1
ZipTime                  = 05:
UIDPrefix                = 1.2.826.0.1.3680043.2.135.736310.50024482
EnableComputedFields     = 1

FileNameSyntax           = 4

# Configuration of compression for incoming images and archival
DroppedFileCompression   = as
IncomingCompression      = as
ArchiveCompression       = as

# For debug information
PACSName                 = OPENREM
OperatorConsole          = 127.0.0.1
DebugLevel               = 0

# Configuration of disk(s) to store images
MAGDeviceFullThreshHold  = 30
MAGDevices               = 1
MAGDevice0               = E:\conquest\dicom\


# Importing incoming data in to OpenREM
# Note that these require that .py files are associated with python.exe on the server

# DICOM Radiation Dose Structured Report (RDSR) objects
ImportConverter0 = ifequal "%V0008,0016","1.2.840.10008.5.1.4.1.1.88.67"; {save to E:\conquest\dicom\sr\%o.dcm; openrem_import_rdsr.lua("E:\conquest\dicom\sr\%o.dcm"); destroy;}

# Mammography objects (modality MG)
ImportModality1 = MG
ImportConverter1 = save to E:\conquest\dicom\mammo\%o.dcm; openrem_import_mg.lua("E:\conquest\dicom\mammo\%o.dcm"); destroy;

# Digital radiography (modality DX)
ImportModality2 = DX
ImportConverter2 = save to E:\conquest\dicom\dx\%o.dcm; openrem_import_cr_or_dx.lua(E:\conquest\dicom\dx\%o.dcm::%V0008,0070::%V0008,1090::%V0008,1010::%V0018,1020::%V0008,0020); destroy;

# Computed radiography (modality CR). Note: some digital radiography systems send their images as "CR" rather than "DX"
ImportModality3 = CR
ImportConverter3 = save to E:\conquest\dicom\cr\%o.dcm; openrem_import_cr_or_dx.lua(E:\conquest\dicom\cr\%o.dcm::%V0008,0070::%V0008,1090::%V0008,1010::%V0018,1020::%V0008,0020); destroy;

# Import converter for CT images. Conquest saves images using the NHS number as the folder name, so I think it makes sense
# to process the images by patient, rather than by study (process patient after... rather then process study after...). If
# by study was used then the openrem_import_ct.lua script may be run multiple times on the same folder if the folder
# contains more than one study.
ImportModality4 = CT
ImportConverter4 = process patient after 0 by openrem_import_ct.lua %p::%V0008,0070::%V0008,1090::%V0018,1020::%V0008,1010;

# Import converter for Presentation State objects - delete them
ImportModality6 = PR
ImportConverter6 = destroy;

# Import converter for Key Object Selection objects - delete them
ImportModality7 = KO
ImportConverter7 = destroy;

# Import converter for OT modality objects - delete them
ImportModality8 = OT
ImportConverter8 = destroy;

# Import converter for PT modality objects (PET) - delete them
ImportModality9 = PT
ImportConverter9 = destroy;

# Import converter for NM modality objects - delete them
ImportModality10 = NM
ImportConverter10 = destroy;

# Import converter for "Comprehensive SR Storage" type files - delete them
ImportConverter11 = ifequal "%V0008,0016","1.2.840.10008.5.1.4.1.1.88.33"; {destroy;}

# Import converter for "Basic Text SR Storage" type files - delete them
ImportConverter11 = ifequal "%V0008,0016","=BasicTextSRStorage"; {destroy;}

# Import converter for US modality objects - delete them
ImportModality12 = US
ImportConverter12 = destroy;

# Import converter for XA modality objects - delete them
ImportModality12 = XA
ImportConverter12 = destroy;
