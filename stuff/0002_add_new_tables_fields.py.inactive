# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('remapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DicomDeleteSettings',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('del_no_match', models.BooleanField(default=False, verbose_name=b"delete objects that don't match any import functions?")),
                ('del_rdsr', models.BooleanField(default=False, verbose_name=b'delete radiation dose structured reports after processing?')),
                ('del_mg_im', models.BooleanField(default=False, verbose_name=b'delete mammography images after processing?')),
                ('del_dx_im', models.BooleanField(default=False, verbose_name=b'delete radiography images after processing?')),
                ('del_ct_phil', models.BooleanField(default=False, verbose_name=b'delete Philips CT dose info images after processing?')),
            ],
            options={
                'verbose_name': 'Delete DICOM objects settings',
            },
        ),
        migrations.CreateModel(
            name='DicomQRRspImage',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('query_id', models.CharField(max_length=64)),
                ('sop_instance_uid', models.TextField(null=True, blank=True)),
                ('instance_number', models.IntegerField(null=True, blank=True)),
                ('sop_class_uid', models.TextField(null=True, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='DicomQRRspSeries',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('query_id', models.CharField(max_length=64)),
                ('series_instance_uid', models.TextField(null=True, blank=True)),
                ('series_number', models.IntegerField(null=True, blank=True)),
                ('modality', models.CharField(max_length=16, null=True, blank=True)),
                ('series_description', models.TextField(null=True, blank=True)),
                ('number_of_series_related_instances', models.IntegerField(null=True, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='DicomQRRspStudy',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('query_id', models.CharField(max_length=64)),
                ('study_instance_uid', models.TextField(null=True, blank=True)),
                ('modality', models.CharField(max_length=16, null=True, blank=True)),
                ('modalities_in_study', models.CharField(max_length=100, null=True, blank=True)),
                ('study_description', models.TextField(null=True, blank=True)),
                ('number_of_study_related_series', models.IntegerField(null=True, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='DicomQuery',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('complete', models.BooleanField(default=False)),
                ('query_id', models.CharField(max_length=64)),
                ('failed', models.BooleanField(default=False)),
                ('message', models.TextField(null=True, blank=True)),
                ('stage', models.TextField(null=True, blank=True)),
                ('move_complete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DicomRemoteQR',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=64)),
                ('aetitle', models.CharField(max_length=16, null=True, blank=True)),
                ('port', models.IntegerField(null=True, blank=True)),
                ('ip', models.GenericIPAddressField(null=True, blank=True)),
                ('hostname', models.CharField(max_length=32, null=True, blank=True)),
                ('enabled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DicomStoreSCP',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=64)),
                ('aetitle', models.CharField(max_length=16, null=True, blank=True)),
                ('port', models.IntegerField(null=True, blank=True)),
                ('task_id', models.CharField(max_length=64, null=True, blank=True)),
                ('status', models.CharField(max_length=64, null=True, blank=True)),
                ('run', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PatientIDSettings',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name_stored', models.BooleanField(default=False)),
                ('name_hashed', models.BooleanField(default=True)),
                ('id_stored', models.BooleanField(default=False)),
                ('id_hashed', models.BooleanField(default=True)),
                ('accession_hashed', models.BooleanField(default=False)),
                ('dob_stored', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Patient ID Settings',
            },
        ),
        migrations.CreateModel(
            name='UniqueEquipmentNames',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('manufacturer', models.TextField(null=True, blank=True)),
                ('manufacturer_hash', models.CharField(max_length=64, null=True, blank=True)),
                ('institution_name', models.TextField(null=True, blank=True)),
                ('institution_name_hash', models.CharField(max_length=64, null=True, blank=True)),
                ('station_name', models.CharField(max_length=32, null=True, blank=True)),
                ('station_name_hash', models.CharField(max_length=64, null=True, blank=True)),
                ('institutional_department_name', models.TextField(null=True, blank=True)),
                ('institutional_department_name_hash', models.CharField(max_length=64, null=True, blank=True)),
                ('manufacturer_model_name', models.TextField(null=True, blank=True)),
                ('manufacturer_model_name_hash', models.CharField(max_length=64, null=True, blank=True)),
                ('device_serial_number', models.TextField(null=True, blank=True)),
                ('device_serial_number_hash', models.CharField(max_length=64, null=True, blank=True)),
                ('software_versions', models.TextField(null=True, blank=True)),
                ('software_versions_hash', models.CharField(max_length=64, null=True, blank=True)),
                ('gantry_id', models.TextField(null=True, blank=True)),
                ('gantry_id_hash', models.CharField(max_length=64, null=True, blank=True)),
                ('display_name', models.TextField(null=True, blank=True)),
                ('hash_generated', models.BooleanField(default=False)),
            ],
        ),
        migrations.AddField(
            model_name='exports',
            name='export_user',
            field=models.ForeignKey(blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='exports',
            name='includes_pid',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='generalstudymoduleattr',
            name='accession_hashed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='generalstudymoduleattr',
            name='study_workload_chart_time',
            field=models.DateTimeField(null=True, blank=True),
        ),
        migrations.AddField(
            model_name='patientmoduleattr',
            name='id_hashed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='patientmoduleattr',
            name='name_hashed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='median_available',
            field=models.BooleanField(default=False, editable=False),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='plotAverageChoice',
            field=models.CharField(default=b'mean', max_length=6, choices=[(b'mean', b'mean'), (b'median', b'median'), (b'both', b'both')]),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='plotCTInitialSortingChoice',
            field=models.CharField(default=b'freq', max_length=4, choices=[(b'dlp', b'DLP'), (b'ctdi', b'CTDI'), (b'freq', b'Frequency'), (b'name', b'Name')]),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='plotCTRequestFreq',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='plotCTRequestMeanDLP',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='plotDXAcquisitionMeankVpOverTime',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='plotDXAcquisitionMeanmAsOverTime',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='plotDXInitialSortingChoice',
            field=models.CharField(default=b'freq', max_length=4, choices=[(b'dap', b'DAP'), (b'freq', b'Frequency'), (b'name', b'Name')]),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='plotInitialSortingDirection',
            field=models.IntegerField(default=-1, null=True, choices=[(1, b'Ascending'), (-1, b'Descending')]),
        ),
        migrations.AlterField(
            model_name='generalstudymoduleattr',
            name='accession_number',
            field=models.TextField(null=True, blank=True),
        ),
        migrations.AlterUniqueTogether(
            name='uniqueequipmentnames',
            unique_together=set([('manufacturer_hash', 'institution_name_hash', 'station_name_hash', 'institutional_department_name_hash', 'manufacturer_model_name_hash', 'device_serial_number_hash', 'software_versions_hash', 'gantry_id_hash')]),
        ),
        migrations.AddField(
            model_name='dicomquery',
            name='qr_scp_fk',
            field=models.ForeignKey(blank=True, to='remapp.DicomRemoteQR', null=True),
        ),
        migrations.AddField(
            model_name='dicomquery',
            name='store_scp_fk',
            field=models.ForeignKey(blank=True, to='remapp.DicomStoreSCP', null=True),
        ),
        migrations.AddField(
            model_name='dicomqrrspstudy',
            name='dicom_query',
            field=models.ForeignKey(to='remapp.DicomQuery'),
        ),
        migrations.AddField(
            model_name='dicomqrrspseries',
            name='dicom_qr_rsp_study',
            field=models.ForeignKey(to='remapp.DicomQRRspStudy'),
        ),
        migrations.AddField(
            model_name='dicomqrrspimage',
            name='dicom_qr_rsp_series',
            field=models.ForeignKey(to='remapp.DicomQRRspSeries'),
        ),
        migrations.AddField(
            model_name='generalequipmentmoduleattr',
            name='unique_equipment_name',
            field=models.ForeignKey(to='remapp.UniqueEquipmentNames', null=True),
        ),
    ]
