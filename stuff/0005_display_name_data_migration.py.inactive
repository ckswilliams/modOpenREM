# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
from django.conf import settings
from django.db.models.loading import get_model

def populate_unique_equipment_names(self, orm):

    study_data = self.get_model('remapp','GeneralStudyModuleAttr')

    unique_combinations = study_data.objects.values_list('generalequipmentmoduleattr__manufacturer',
                                                         'generalequipmentmoduleattr__institution_name',
                                                         'generalequipmentmoduleattr__station_name',
                                                         'generalequipmentmoduleattr__institutional_department_name',
                                                         'generalequipmentmoduleattr__manufacturer_model_name',
                                                         'generalequipmentmoduleattr__device_serial_number',
                                                         'generalequipmentmoduleattr__software_versions',
                                                         'generalequipmentmoduleattr__gantry_id').distinct()

    from remapp.models import UniqueEquipmentNames
    from remapp.models import GeneralEquipmentModuleAttr

    for each_combination in unique_combinations:

        if each_combination[1] and each_combination[2]:
            display_name_text = each_combination[1] + ' ' + each_combination[2]
        elif each_combination[1]:
            display_name_text = each_combination[1]
        elif each_combination[2]:
            display_name_text = each_combination[2]
        else:
            display_name_text = "Blank"

        new_combination = UniqueEquipmentNames(manufacturer=each_combination[0],
                                               institution_name=each_combination[1],
                                               station_name=each_combination[2],
                                               institutional_department_name=each_combination[3],
                                               manufacturer_model_name=each_combination[4],
                                               device_serial_number=each_combination[5],
                                               software_versions=each_combination[6],
                                               gantry_id=each_combination[7],
                                               display_name=display_name_text
                                               )
        new_combination.save()

        # Code below here to find every occurrence of the current combination that exists in GeneralStudyModuleAttr
        # and write the appropriate UniqueEquipmentNames row value into the unique_equipment_name field of
        # GeneralStudyModuleAttr.
        equipment_data = GeneralEquipmentModuleAttr.objects.filter(manufacturer=each_combination[0],
                                                                   institution_name=each_combination[1],
                                                                   station_name=each_combination[2],
                                                                   institutional_department_name=each_combination[3],
                                                                   manufacturer_model_name=each_combination[4],
                                                                   device_serial_number=each_combination[5],
                                                                   software_versions=each_combination[6],
                                                                   gantry_id=each_combination[7])

        for row in equipment_data:
            row.unique_equipment_name = UniqueEquipmentNames(pk=new_combination.pk)
            row.save()


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        # User note: replace the text '0004_auto_20150703_1614' that appears below with the name of your most recent
        # migration file.
        ('remapp', '0004_auto_20150703_1614'),
    ]

    operations = [
        migrations.RunPython(populate_unique_equipment_names)
    ]